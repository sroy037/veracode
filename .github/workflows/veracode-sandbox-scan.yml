name: Veracode Static Sandbox Scanner
run-name: Veracode Sandbox Scan - ${{ github.event.client_payload.repository.name }}

concurrency:
  group: ${{ github.event.client_payload.event_type }}-${{ github.event.client_payload.repository.name }}-${{ github.event.client_payload.repository.branch }}
  cancel-in-progress: true

on:
  repository_dispatch:
    types:
      - java-maven-sandbox-scan
      - java-gradle-sandbox-scan
      - source-code-sandbox-scan
      - dot-net-sandbox-scan
      - go-sandbox-scan
      - tsql-sandbox-scan
      - plsql-sandbox-scan
      - php-sandbox-scan
      - scala-sandbox-scan
      - dart-sandbox-scan
      - java-sandbox-scan
      - unidentified-lang-sandbox-scan

jobs:
  build:
    uses: ./.github/workflows/veracode-build-artifact-for-scanning.yml
    with:
      repository: ${{ github.event.client_payload.repository.full_name }}
      ref: ${{ github.event.client_payload.sha }}
      token: ${{ github.event.client_payload.token }}
      event_name: ${{ github.event.action }}

  sandbox_scan:
    needs: build
    runs-on: ubuntu-latest
    name: sandbox scan

    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      
      # get the compiled binary from a previous job
      - name: get archive
        uses: actions/download-artifact@v4
        with:
          name: veracode-artifact
          path: ./veracode_artifact_directory

      # run the policy scan action
      - name: Veracode Upload and Scan Action Step
        uses: veracode/uploadandscan-action@v0.1.5
        id: upload_and_scan
        with:
          appname: ${{ github.event.client_payload.repository.name }}
          createprofile: true
          policy: ${{ github.event.client_payload.policy_name }}
          version: '${{ github.run_id }}'
          filepath: ./veracode_artifact_directory/
          vid: '${{ secrets.VERACODE_API_ID }}'
          vkey: '${{ secrets.VERACODE_API_KEY }}'
          createsandbox: true
          sandboxname: GitHub App Scans-${{ github.event.client_payload.repository.branch }}
          failbuild: ${{ github.event.client_payload.user_config.break_build_policy_findings }}

      - name: Find app_id and Update Business Unit for the application
        if: always()
        run: |
          VERACODE_WRAPPER_VERSION=$(curl -sS "https://search.maven.org/solrsearch/select?q=g:%22com.veracode.vosp.api.wrappers%22&rows=20&wt=json" | jq -r ".response.docs[0].latestVersion")
          curl -sS -o veracode-wrapper.jar "https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/${VERACODE_WRAPPER_VERSION}/vosp-api-wrappers-java-${VERACODE_WRAPPER_VERSION}.jar"
          APP_ID=$(java -jar veracode-wrapper.jar -vid ${{ secrets.VERACODE_API_ID }} -vkey ${{ secrets.VERACODE_API_KEY }} -action getapplist | grep ${{ github.event.client_payload.repository.name }} | cut -d'"' -f2)
          echo "Application ID Found: "${APP_ID}
          java -jar veracode-wrapper.jar -vid ${{ secrets.VERACODE_API_ID }} -vkey ${{ secrets.VERACODE_API_KEY }} -action updateapp -appid ${APP_ID} -businessunit "Test BU"
