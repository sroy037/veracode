name: Veracode Build
on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      ref:
        required: true
        type: string
      token:
        required: true
        type: string
jobs:
  build:
    runs-on: self-hosted
#    container:
#      image: veracode/scm-packaging:latest
    env:
      VERACODE_API_KEY_ID: '${{ secrets.VERACODE_API_ID }}'
      VERACODE_API_KEY_SECRET: '${{ secrets.VERACODE_API_KEY }}'
      JF_USER: 'admin'
      JF_KEY: 'Robin@090'
    steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
        token: ${{ inputs.token }}

    - uses: actions/checkout@v4
      with:
        path: 'veracode-helper'

    - uses: actions/checkout@v4
      with:
        path: 'veracode'
        
    - name: Package the application
      id: application_package
      env:
        VERACODE_API_KEY_ID: '${{ secrets.VERACODE_API_ID }}'
        VERACODE_API_KEY_SECRET: '${{ secrets.VERACODE_API_KEY }}'
        JF_USER: 'admin'
        JF_KEY: 'Robin@090'
      run: |
        cd veracode-helper/helper/cli
        #cliFile=$(ls -1 . | head -n 1)
        #cliFileName=$(echo "$cliFile" | cut -c 1-$((${#cliFile}-7)))
        #tar -zxvf $cliFile
        #cd $cliFileName
        curl -fsS https://tools.veracode.com/veracode-cli/install | sh
        #export PATH="veracode-helper/helper/cli/$cliFileName:$PATH"
        export PATH="/Users/soumikroy/actions-runner/_work/veracode/veracode/veracode-helper/helper/cli:$PATH"
        #cd /home/runner/work/veracode/veracode && pwd && ls -lrt veracode-helper/helper/cli/$cliFileName
        cd /Users/soumikroy/actions-runner/_work/veracode/veracode && pwd && ls -lrt veracode-helper/helper/cli/
        #cd /__w/veracode/veracode
        #veracode package --source . --output veracode-artifacts --trust --debug
        #zip veracode-artifact.zip veracode-artifacts/* -x .zip .tar .tar.gz .gz

    - name: Maven Build
      if: failure() && steps.application_package.outcome == 'failure'
      run: |
        mvn clean install
        mvn -B -e -X clean package

    - name: Package error
      if: failure() && steps.application_package.outcome == 'failure'
      run: |
        echo "::error::Veracode static scan faced a problem. Please contact your Veracode administrator for more information."

    - uses: actions/upload-artifact@v4
      with:
        name: veracode-artifact
        path: veracode-artifact.zip
        if-no-files-found: error
